<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        OBgFACEO9v+lbi0Vc4oX/gAAAABJRU5ErkJggg==
</value>
  </data>
</root>